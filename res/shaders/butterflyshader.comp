#include "ext/complex.glsl"

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba32f) readonly uniform image2D tex_unit0; //twiddlesIndices;

layout (binding = 1, rgba32f) uniform image2D tex_unit1; //pingpong1;

layout (binding = 2, rgba32f) uniform image2D tex_unit2; //pingpong2;

uniform int stage;
uniform int pingpong;
uniform int direction;

void horizontal_butterflies(){
	complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);
	
	if(pingpong == 0){

		vec4 data = imageLoad(tex_unit0, ivec2(stage, x.x)).rgba;
		vec2 p_ = imageLoad(tex_unit1, ivec2(data.z, x.y)).rg;
		vec2 q_ = imageLoad(tex_unit1, ivec2(data.w, x.y)).rg;
		vec2 w_ = vec2(data.x, data.y);
		
		complex p = complex(p_.x,p_.y);
		complex q = complex(q_.x,q_.y);
		complex w = complex(w_.x,w_.y);
		
		H = add(p,mul(w,q));
		
		imageStore(tex_unit2, x, vec4(H.real, H.im, 0.0, 1));
	}
	else if(pingpong == 1){

		vec4 data = imageLoad(tex_unit0, ivec2(stage, x.x)).rgba;
		vec2 p_ = imageLoad(tex_unit2, ivec2(data.z, x.y)).rg;
		vec2 q_ = imageLoad(tex_unit2, ivec2(data.w, x.y)).rg;
		vec2 w_ = vec2(data.x, data.y);
		
		complex p = complex(p_.x,p_.y);
		complex q = complex(q_.x,q_.y);
		complex w = complex(w_.x,w_.y);
		
		H = add(p,mul(w,q));
		
		imageStore(tex_unit1, x, vec4(H.real, H.im, 0.0, 1));
	}
}

void vertical_butterflies(){
	complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);
	
	if(pingpong == 0){

		vec4 data = imageLoad(tex_unit0, ivec2(stage, x.y)).rgba;
		vec2 p_ = imageLoad(tex_unit1, ivec2(x.x, data.z)).rg;
		vec2 q_ = imageLoad(tex_unit1, ivec2(x.x, data.w)).rg;
		vec2 w_ = vec2(data.x, data.y);
		
		complex p = complex(p_.x,p_.y);
		complex q = complex(q_.x,q_.y);
		complex w = complex(w_.x,w_.y);
		
		H = add(p,mul(w,q));
		
		imageStore(tex_unit2, x, vec4(H.real, H.im, 0.0, 1.0));

	} else if(pingpong == 1){

		vec4 data = imageLoad(tex_unit0, ivec2(stage, x.y)).rgba;
		vec2 p_ = imageLoad(tex_unit2, ivec2(x.x, data.z)).rg;
		vec2 q_ = imageLoad(tex_unit2, ivec2(x.x, data.w)).rg;
		vec2 w_ = vec2(data.x, data.y);
		
		complex p = complex(p_.x,p_.y);
		complex q = complex(q_.x,q_.y);
		complex w = complex(w_.x,w_.y);
		
		H = add(p,mul(w,q));
		
		imageStore(tex_unit1, x, vec4(H.real, H.im, 0.0, 1.0));
	}
}

void main(void){

	if (direction == 0)
		horizontal_butterflies();
	else if (direction == 1)
		vertical_butterflies();
}